name: Run full matrix Tests before Releases
on:
  pull_request:
    branches: [ release ]
jobs:
  pre-release-matrix-test:
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-latest]
        python-version: ["3.9", "3.10"]
        poetry-version: ["1.3.0"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: |
          poetry install
      - name: Run tests
        run: poetry run python mothertongues/tests/run.py dev
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0 # fetch all commits/branches
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install & Build UI
        run: |
          # The default config is for the monorepo, while this is for standalone
          cd mothertongues-UI && npm install && npx nx build mtd-mobile-ui --configuration=pydev
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.3.0"
      - name: Install dependencies
        run: |
          poetry install --with docs
          pip install build twine
      - name: Build
        run: |
          poetry build
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/*
      - name: Determine tag
        id: determine_tag
        run: |
          echo "TAG_VERSION=$(ls dist/mothertongues-*.tar.gz | sed -e 's/.*mothertongues-//' -e 's/.tar.gz.*//')" >> $GITHUB_OUTPUT
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.determine_tag.outputs.TAG_VERSION }}
          create_annotated_tag: true
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Setup git config for doc deploy
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
      - name: Deploy docs with mike ðŸš€
        run: |
          poetry run mkdocs build
          poetry run mike deploy --push --update-aliases ${{ steps.tag_version.outputs.new_tag }} stable
